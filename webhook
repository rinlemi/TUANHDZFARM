-- üì£ Discord Webhook: Beri tracker (Client/Executor)

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local plr = Players.LocalPlayer

-- üîó Thay webhook c·ªßa b·∫°n v√†o ƒë√¢y
local WEBHOOK_URL = "https://discord.com/api/webhooks/xxxxxxxx/yyyyyyyy"

-- ch·ªçn h√†m http ph√π h·ª£p executor
local httpRequest =
    (syn and syn.request) or
    (http and http.request) or
    http_request or
    request

if not httpRequest then
    warn("[Webhook] Executor c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ HTTP.")
    return
end

local function sendWebhook(msg)
    local payload = HttpService:JSONEncode({ content = msg })
    local ok, err = pcall(function()
        httpRequest({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = payload
        })
    end)
    if not ok then
        warn("[Webhook] L·ªói g·ª≠i Discord: " .. tostring(err))
    end
end

-- t√¨m label Beri
local function waitForBeriLabel(timeout)
    local pg = plr:WaitForChild("PlayerGui")
    local t0 = os.clock()
    while os.clock() - t0 < (timeout or 20) do
        local ok, label = pcall(function()
            return pg:FindFirstChild("Menu", true)
                and pg.Menu.Frame.C.Frame.A.Beri:FindFirstChild("BeriAmount")
        end)
        if ok and label and label:IsA("TextLabel") then
            return label
        end
        task.wait(0.2)
    end
    return nil
end

-- l·ªçc chu·ªói -> s·ªë
local function toNumber(txt)
    local clean = tostring(txt or ""):gsub("[^%d%-]", "")
    return tonumber(clean)
end

task.spawn(function()
    local label = waitForBeriLabel(20)
    if not label then
        warn("[Webhook] Kh√¥ng t√¨m th·∫•y label BeriAmount.")
        return
    end

    -- gi√° tr·ªã ban ƒë·∫ßu
    local lastText = label.Text
    local lastVal = toNumber(lastText) or 0
    sendWebhook(("‚úÖ üë§ Name: **%s**\nüí∞ Beri ban ƒë·∫ßu: **%s**"):format(plr.Name, lastText))

    -- ch·ªâ b√°o theo chu k·ª≥ 1 ph√∫t
    while true do
        task.wait(60)
        local curText = label.Text
        local curVal = toNumber(curText) or lastVal
        local diff = curVal - lastVal
        sendWebhook(("‚è±Ô∏è 1 ph√∫t\nüë§ Name: **%s**\nüí∞ Beri hi·ªán t·∫°i: **%s**\nüìà TƒÉng/Gi·∫£m: **%+d**"):format(
            plr.Name,
            curText,
            diff
        ))
        lastText, lastVal = curText, curVal
    end
end)
